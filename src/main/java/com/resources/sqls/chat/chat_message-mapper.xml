<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.chat.ChatMessageMapper">
    <resultMap id="ChatMessage" type="com.model.chat.chatmessage.ChatMessage">
        <result column="message_json" property="message_json" typeHandler="com.middleware.JsonObjectTypeHandler"/>
    </resultMap>
    <insert id="sendMessage" useGeneratedKeys="true" keyProperty="no">
        insert into chat_message(id, channel_no, company_member_no, parent_message_id, type, content, edited,
                                 message_json,
                                 reg_datetime, updated_datetime)
        VALUES (#{id}, #{channel_no}, #{company_member_no}, #{parent_message_id}, #{type}, #{content}, false,
                #{message_json, typeHandler=com.middleware.JsonObjectTypeHandler},
                now(), now())
    </insert>
    <delete id="deleteMessage">
        delete
        from chat_message
        WHERE id = #{id}
    </delete>
    <update id="updateMessage">
        update chat_message
        SET content          = #{content},
            edited           = true,
            updated_datetime = now()
        WHERE id = #{id}
    </update>
    <select id="getChannelMessages" resultType="ChatMessage" resultMap="ChatMessage">
        select *
        from chat_message
        WHERE channel_no = #{channel_no}
        ORDER BY reg_datetime DESC, id
        LIMIT 50
    </select>
    <select id="getChannelNextMessages" resultType="ChatMessage" resultMap="ChatMessage">
        SET @LAST_REG_DATE = (select reg_datetime
                              from chat_message
                              WHERE id = #{last_message_id});
        select *
        from chat_message
        WHERE channel_no = #{channel_no}
          AND (reg_datetime <![CDATA[<]]> @LAST_REG_DATE OR (reg_datetime = @LAST_REG_DATE AND id <![CDATA[<]]> #{last_message_id}))
        ORDER BY reg_datetime DESC, id
        LIMIT 50
    </select>
    <select id="getChannelLastMessage" resultType="ChatMessage" resultMap="ChatMessage">
        select *
        from chat_message
        WHERE channel_no = #{channel_no}
        ORDER BY reg_datetime DESC, id DESC
        LIMIT 1
    </select>
    <select id="getChatMessageById" resultType="ChatMessage" resultMap="ChatMessage">
        select *
        from chat_message
        WHERE id = #{id}
    </select>
    <select id="checkIdDuplicated" resultType="_boolean">
        select EXISTS(select * from chat_message WHERE id = #{id})
    </select>
    <select id="getMessageThreadCount" resultType="int">
        select COUNT(*)
        from chat_message
        WHERE parent_message_id = #{id}
    </select>
</mapper>